
    model{

    ##################
    #Group size model#
    ##################
    
    #priors
    int.gs ~ dnorm(0,0.001)    
    
    #random line effect
    line.sd ~ dunif(0,10)
    line.tau <- pow(line.sd,-2)
    for(j in 1:n.Lines){
      random.gs.line[j] ~ dnorm(0,line.tau)
    }
    
    #random time effect
    year.sd ~ dunif(0,10)
    year.tau <- pow(year.sd,-2)
    for(t in 1:n.Years){
      random.gs.year[t] ~ dnorm(0,year.tau)
    }
    
    #random site2 effect
    site.sd ~ dunif(0,10)
    site.tau <- pow(site.sd,-2)
    for(t in 1:n.Sites2){
      random.gs.site2[t] ~ dnorm(0,site.tau)
    }

    #random line/year effects
    line.year.sd ~ dunif(0,10)
    line.year.tau <- pow(line.year.sd,-2)
    for(j in 1:n.LineYear){
      random.gs.line.year[j] ~ dnorm(0,line.year.tau)
    }

    #random site2/year effects
    site.year.sd ~ dunif(0,10)
    site.year.tau <- pow(site.year.sd,-2)
    for(j in 1:n.SiteYear){
<<<<<<< HEAD
      random.gs.site2.year[j] ~ dnorm(0,site.year.tau)
=======
      random.gs.site.year[j] ~ dnorm(0,site.year.tau)
>>>>>>> 10a97d73c42e80a4d80486cd20303edbf2d0b893
    }

    #Model
    #for each detection, model group size
    for(i in 1:N){
    
    GroupSize[i] ~ dpois(expGroupSize[i])
    log(expGroupSize[i]) <- int.gs + 
                            random.gs.year[detectionYear[i]]+ 
                            random.gs.line[detectionLine[i]]+
                            random.gs.site2[detectionSite[i]]+
<<<<<<< HEAD
                            random.gs.site2.year[detectionSiteYear[i]]
=======
                            random.gs.site.year[detectionSiteYear[i]]
>>>>>>> 10a97d73c42e80a4d80486cd20303edbf2d0b893
    
    }


<<<<<<< HEAD
    #times the re by the indices
    for(k in 1:n.allCombos){
      for(i in 1:N){
        out[i,k]<-random.gs.site2.year[detectionSiteYear[i]]*TransYrIdx[i,k]
      }
        out2[k]<-max(out[,k],0)
    }

    ##then convert them to a t,j matrix
    for(k in 1:n.allCombos){
      randomJT[allCombos[k,1],allCombos[k,2]] <- out2[k]    
    }

=======
    #split the detection line year effect
    #for(k in 1:n.allCombos){
    #  for(i in 1:N){
    #    out[i,k] <- random.gs.line.year[i] * TransYrIdx[i,k]
    #  }
    #    out2[k] <- max(out[,k],0)
    #}
    
>>>>>>> 10a97d73c42e80a4d80486cd20303edbf2d0b893
    #using this model, get predicted group size for each line and year
    for(t in 1:n.Years){
      for(j in 1:n.Lines){
        log(predGroupSize[j,t]) <- int.gs + 
                                    random.gs.year[t]+ 
                                    random.gs.line[j]+
                                    random.gs.site2[site2[j]]+
<<<<<<< HEAD
                                    randomJT[site2[j],t]
=======
<<<<<<< HEAD
                                    randomJT[allCombos[j,1],allCombos[t,2]]
=======
                                    random.gs.site2.year[t,site2[j]]
>>>>>>> 87e45b268f82ea127a659036e5f6ea4bf0470d6f
>>>>>>> 10a97d73c42e80a4d80486cd20303edbf2d0b893
     }
    }

    }
    
